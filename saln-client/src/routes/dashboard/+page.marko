import "./tags/style.css";
import { redirect } from "../../utils/redirect.ts";

<let/tmpData = null/>
<let/formsFetched = false/>
<let/loaded = false/>

<script>
  if (!loaded) {
    tmpData = { // TODO : These should be fetched from IndexedDB
      salns: [
        {
          salnID: "00000001",
          updatedAt: "2005-10-31",
          personalInfo: {
            filingType: "Not Applicable", // 0: Not Applicable, 1: Joint, 2: Separate
            declarantName: "Guiang, Miguel, A.",
            address: "a",
            position: "a",
            agency: "a",
            officeAddress: "a",
            spouseName: "",
            spousePosition: "",
            spouseAgency: "",
            spouseOfficeAddress: "",
          },
          children: [
            {
              name: "Child1",
              dob: '2007-10-16',
              age: '18'
            }
          ],
          realProperties: [],
          personalProperties: [],
          liabilities: [],
          connections: [],
          relatives: []
        },
        {
          salnID: "00000004",
          updatedAt: "2005-10-31", // TODO: turn into timestamp
          personalInfo: {
            name: "Pe√±aflorida, Aeron, D.",
            position: "Scientist",
            agency: "Department of Science and Technology",
            officeAddress: "DOST Main Building, General Santos Avenue, Pasig City",
          }
        },
      ]
    }
    console.log(tmpData);
    loaded = true;
    formsFetched = true;
  }
</script>

<let/showDeleteAcctModal = false>

<body>
    <div class="header">
        <h1 class="header-title">Dashboard</h1>

        <div class="header-button-container">
            <button class="deleteButton" onClick() {
              showDeleteAcctModal = true;
              // TODO: API call to delete employee on remote database 
              // It should cascade and delete saln data.
              // Clear IndexedDB SALN data, Pending API calls, and localStorage and sessionStorage
            }>
              Delete Account
            </button>
            <button class="otherButton" onClick() {
              sessionStorage.setItem("tmpSalnID", "1");
              // setCurrentSaln(tmpData.salns[0]);
              redirect("/saln-form");
            }> // TODO: load saln-form with all fields blank
              Accomplish new SALN
            </button>
            <button class="otherButton" onClick() {
              location.href = "uploadJSON";
            }>
              Upload SALN JSON
            </button>
            <button class="otherButton" onClick() {
              location.href = "login";
              // TODO: Clear IndexedDB SALN data, and localStorage and sessionStorage
            }> // TODO: handle log out
              Log out
            </button>
        </div>
    </div>
    <if=(formsFetched && tmpData.salns.length > 0)>
      <for|saln, idx| of=tmpData.salns>
        <DashboardCard
          salnID=saln.salnID,
          dateFilled=saln.updatedAt,
          name=saln.personalInfo.name,
          position=saln.personalInfo.position,
          agency=saln.personalInfo.agency,
          officeAddress=saln.personalInfo.officeAddress,

          idx=idx,
          deleteElement(i) {
            const newFormList = tmpData.salns.filter((_, idx) => i !== idx); 
				    tmpData = {...tmpData, salns: newFormList};
          },
        /> // TODO: pass an update function, handle invalid/incomplete
      </for>
    </if>
    <else>
      <h1 class="header-title">No forms</h1>
    </else>
</body>

<if=showDeleteAcctModal>
  <DeleteAcctModal
    deleteAccount() { // TODO: Actually delete account
      location.href = "login";
    },
    toggleModal() {
      showDeleteAcctModal = !showDeleteAcctModal;
    },
  />
</if>