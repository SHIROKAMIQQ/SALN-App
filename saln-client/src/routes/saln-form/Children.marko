import { AssetTypes } from "../../utils/assetTypes.ts";

export interface Input {
	children: any[];
	updateFormData: (newChildren: any) => void;
	updateFormValid: (newFormValid: boolean) => void;
}

<let/showModal = false />

<div class="page-buttons">
	<button class="nextButton" 
		onClick() {
			showModal = true;
		}
	>
			Add Asset
	</button>
</div>

<if=(input.children.length > 0)>
	<for|child| of=input.children>
		<DisplayCard 
			type=AssetTypes.UNMARRIED_CHILDREN
			attributes=child
		/>
	</for>
</if>
<else>
	<h1 class="indicator">No children</h1>
</else>

<if=(showModal)>
	<AssetModal
		type=AssetTypes.UNMARRIED_CHILDREN
		showModalChange(o) {
			showModal = o;
		}
		addToList (obj) {
			input.updateFormData([...input.children, obj]);
		}
		validateData (obj) {
			if (!obj.Name) {
				console.log("Name fails.");
				return false;
			}

			if (!obj.DoB) {
				console.log("DoB fails.");
				return false;
			}

			const today = new Date();
			const dob = new Date(obj.DoB);
			let age = today.getFullYear() - dob.getFullYear();
			const m = today.getMonth() - dob.getMonth();
			if (m < 0 || (m === 0 && today.getDate() < dob.getDate())) age--;
			console.log(`Age ${age}`);
			if (age >= 18 || today < dob) {
				console.log("DoB fails.");
				return false;
			}

			if (!obj.Age) {
				console.log("Age fail.");
				return false;
			}

			obj.Age = Number(obj.Age);
			if (
				obj.Age >= 18 ||
				obj.Age !== age
			) {
				console.log("Age fails.");
				return false;
			}

			return true;
		}
	/>
</if>

<style>
	.indicator {
		text-align: center;
		margin-left: 0;
	}

	.page-buttons {
		margin-bottom: 2vh;
	}
</style>
