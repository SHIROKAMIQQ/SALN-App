import BaseCard from "./BaseCard.marko";
import "./style.css";

export interface Input {
    label: string;
    subtext?: string;
    name: string;
    options: string[];
	value: number;
    updateAnswer: (answer: number) => void;
}

export const answerNum = {
	"Not Applicable": 0,
	"Joint Filing": 1,
	"Separate Filing": 2
}

<BaseCard>
	<div class="card-header">
		<span class="card-label">${input.label}</span>
		<span class="card-subtext"> ${input.subtext}</span>
	</div>
	<div class="choice-container">
		<for|option| of=input.options>
			<div>
				<label style="margin-right: 1rem;">
					<if=(input.value === answerNum[option])>
						<input
						type="radio"
						name=input.name
						value=option
						onInput(event) {
							input.updateAnswer(answerNum[event.target.value]);
						}
						checked
						/>
					</if>
					<else>
						<input
						type="radio"
						name=input.name
						value=option
						onInput(event) {
							input.updateAnswer(answerNum[event.target.value]);
						}
						/>
					</else>
					${option}
				</label>
			</div>
		</for>
	</div>
</BaseCard>
